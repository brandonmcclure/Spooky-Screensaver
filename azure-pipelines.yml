trigger:
 batch: true
 branches:
    include:
    - master
 paths:
    include:
    - SpiderScreensaver.sln
    - SpiderScreensaver/*
    - build/*

pool:
  name: Hosted VS2017
  demands:
  - msbuild
  - visualstudio
  - java
  - vstest

variables:
  configuration: debug
  system.debug: false
  BuildPlatform: any cpu
  BuildConfiguration: release

steps:
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: 'sq cloud'
    organization: 'brandonmcclure-github'
    projectKey: 'brandonmcclure_Spooky-Screensaver'
    projectName: 'Spooky-Screensaver'

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '**\*.sln'

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    solution: '**\*.sln'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'Run Code Analysis'

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  inputs:
    testAssemblyVer2: |
     **\$(BuildConfiguration)\*test*.dll
     !**\obj\**
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    diagnosticsEnabled: True

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
  continueOnError: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(build.artifactstagingdirectory)'

- powershell: |   
   Write-Host " We are: at $(Get-Location)"
   Write-Host "env:SYSTEM_ARTIFACTSDIRECTORY = $env:SYSTEM_ARTIFACTSDIRECTORY"
   
   if ($(system.debug)){
    Write-Host "env:AGENT_RELEASEDIRECTORY = $env:AGENT_RELEASEDIRECTORY"
    ls "$env:SYSTEM_ARTIFACTSDIRECTORY\MyScreensaver_wpf\bin\Release\"
   }
   copy-item "$env:SYSTEM_ARTIFACTSDIRECTORY\MyScreensaver_wpf\bin\Release\MyScreensaver_wpf.exe" "$env:SYSTEM_ARTIFACTSDIRECTORY\MyScreensaver_wpf\bin\Release\MyScreensaver_wpf.scr"
   
   # Use the environment variables input below to pass secret variables to this script.
  displayName: 'copy exe into .scr file'

- task: ArchiveFiles@2
  displayName: 'Archive $(Build.artifactstagingdirectory)'
  inputs:
    rootFolderOrFile: '$(Build.artifactstagingdirectory)'

- task: CopyFiles@2
  displayName: 'Copy release script to artifact staging directory'
  inputs:
    SourceFolder: build
    TargetFolder: '$(build.artifactstagingdirectory)\build'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'

